name: Build and Test

on:
  push:
    branches:
    - 'main'
    tags:
    - '*'
  pull_request:
    branches:
    - '*'

jobs:
  ubuntu:
    name: libsambaza.so (ubuntu)
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: src
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          path: src/build/dependencies/install
          key: ${{ github.job }}-ubuntu20-${{ hashFiles('./src/dependencies/**') }}
      - name: install build tools
        run: |
            sudo pip install meson
            sudo apt-get update && sudo apt-get install -y ninja-build
      - name: build and install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cmake -DCMAKE_PREFIX_PATH=${{ github.workspace }}/src/build/dependencies/install -DCMAKE_INSTALL_PREFIX=build/dependencies/install -Bbuild/dependencies -Sdependencies
          cmake --build build/dependencies
      - name: build main project
        run: |
          cmake -DCMAKE_PREFIX_PATH=${{ github.workspace }}/src/build/dependencies/install -Bbuild/main -Smain
          cmake --build build/main

  android-c:
    name: libsambaza.so (${{ matrix.name }})
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: src
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: android-arm
            arch: armeabi-v7a
          - name: android-arm64
            arch: arm64-v8a
          - name: android-x86
            arch: x86
          - name: android-x86_64
            arch: x86_64
    steps:
      - uses: actions/checkout@v3
      - name: setup dockcross
        run: docker run --rm dockcross/${{ matrix.name }} > ./dockcross-${{ matrix.name }}; chmod +x ./dockcross-${{ matrix.name }}
      - uses: actions/cache@v3
        id: cache
        with:
          path: src/build/dependencies/${{ matrix.name }}/install
          key: ${{ github.job }}-${{ matrix.name }}-${{ hashFiles('./src/dependencies/**') }}
      - name: cross-compile and install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          ./dockcross-${{ matrix.name }} cmake -DCMAKE_PREFIX_PATH=/work/build/dependencies/${{ matrix.name }}/install -DCMAKE_INSTALL_PREFIX=build/dependencies/${{ matrix.name }}/install -Bbuild/dependencies/android -Sdependencies
          ./dockcross-${{ matrix.name }} cmake --build build/dependencies/android
      - name: cross-compile main project
        run: |
          ./dockcross-${{ matrix.name }} cmake -DCMAKE_PREFIX_PATH=/work/build/dependencies/${{ matrix.name }}/install -Bbuild/main -Smain
          ./dockcross-${{ matrix.name }} cmake --build build/main
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch }}
          path: src/build/main/libsambaza.so

  android-aar:
    name: android
    needs: android-c
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: android
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: armeabi-v7a
          path: android/src/main/jniLibs/armeabi-v7a/
      - uses: actions/download-artifact@v3
        with:
          name: arm64-v8a
          path: android/src/main/jniLibs/arm64-v8a/
      - uses: actions/download-artifact@v3
        with:
          name: x86
          path: android/src/main/jniLibs/x86/
      - uses: actions/download-artifact@v3
        with:
          name: x86_64
          path: android/src/main/jniLibs/x86_64/
      - name: blah
        run: echo ${{ github.event_name }}
      - name: blah2
        run: echo ${{ github.event.action }}
      - name: configure keystore
        run: |
            echo "${{ secrets.JKS }}" > keystore.jks.b64
            base64 -d -i keystore.jks.b64 > /tmp/keystore.jks
      - name: build
        run: ./gradlew assembleRelease -Pandroid.injected.signing.store.file="/tmp/keystore.jks" -Pandroid.injected.signing.store.password="${{ secrets.STORE_PASSWORD }}" -Pandroid.injected.signing.key.alias="${{ secrets.KEY_ALIAS }}" -Pandroid.injected.signing.key.password="${{ secrets.KEY_PASSWORD }}"
      - name: save artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: "sambaza-${{ github.head_ref }}.aar"
          path: ./android/build/outputs/aar/sambaza-release.aar
          retention-days: 14
      - name: upload aar
        if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: './android/build/outputs/aar/sambaza-release.aar'
          asset_name: "sambaza-${{ github.ref_name }}.aar"
          tag: ${{ github.ref }}
          overwrite: true

